
package Recognizer;

import Util.ConnectDB;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;


public class InfoWindow extends javax.swing.JFrame {


    private ConnectDB connectDB;
    private String cargo;
    
    
    public InfoWindow(String nomeCompleto, String cargo) {
        initComponents();

        connectDB = new ConnectDB();
        connectDB.conectar();

        this.cargo = cargo;
        
        labelNome.setText("Nome: " + nomeCompleto);
        labelCargo.setText("Cargo: " + cargo);

        mostrarNoticias();
        configurarBotoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        labelCargo = new javax.swing.JLabel();
        labelNoticias = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dados");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNome.setText("Nome:");
        jPanel1.add(labelNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        labelCargo.setText("Cargo:");
        jPanel1.add(labelCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        labelNoticias.setText("Notícias:");
        jPanel1.add(labelNoticias, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        btnAdicionar.setText("Adicionar Notícia");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        btnEditar.setText("Editar Notícia");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        btnDeletar.setText("Deletar Notícia");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeletar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(416, 308));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        adicionarNoticia();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editarNoticia();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        deletarNoticia();
    }//GEN-LAST:event_btnDeletarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoWindow("Teste Nome", "Teste Cargo").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelCargo;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelNoticias;
    // End of variables declaration//GEN-END:variables

    private void mostrarNoticias() {
        try {
            ResultSet rs = connectDB.readNoticias();
            StringBuilder noticias = new StringBuilder("<html>Noticias:<br/>");

            while (rs.next()) {
                noticias.append(rs.getString("titulo")).append(": ").append(rs.getString("conteudo")).append("<br/>");
            }
            noticias.append("</html>");
            labelNoticias.setText(noticias.toString());
        } catch (SQLException e) {
            System.out.println("Erro ao exibir noticias: " + e);
        }
    }
    
    private void configurarBotoes() {
        // Controle de visibilidade dos botões com base no nível do cargo
        btnAdicionar.setVisible(cargo.equals("Nível 2") || cargo.equals("Nível 3"));
        btnEditar.setVisible(cargo.equals("Nível 3"));
        btnDeletar.setVisible(cargo.equals("Nível 3"));
    }
    
    private void adicionarNoticia() {
        String titulo = JOptionPane.showInputDialog(this, "Título da notícia:");
        String conteudo = JOptionPane.showInputDialog(this, "Conteúdo da notícia:");
        if (titulo != null && conteudo != null && !titulo.isEmpty() && !conteudo.isEmpty()) {
            connectDB.createNoticia(titulo, conteudo);
            mostrarNoticias();
        }
    }

    private void editarNoticia() {
        int id = Integer.parseInt(JOptionPane.showInputDialog(this, "ID da notícia a ser editada:"));
        String titulo = JOptionPane.showInputDialog(this, "Novo título da notícia:");
        String conteudo = JOptionPane.showInputDialog(this, "Novo conteúdo da notícia:");
        if (titulo != null && conteudo != null && !titulo.isEmpty() && !conteudo.isEmpty()) {
            connectDB.updateNoticia(id, titulo, conteudo);
            mostrarNoticias();
        }
    }

    private void deletarNoticia() {
        int id = Integer.parseInt(JOptionPane.showInputDialog(this, "ID da notícia a ser deletada:"));
        connectDB.deleteNoticia(id);
        mostrarNoticias();
    }

}
